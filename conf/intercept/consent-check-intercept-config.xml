<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"

       default-init-method="initialize"
       default-destroy-method="destroy">

    <bean id="shibboleth.consent-check.Condition" parent="shibboleth.Conditions.Scripted" factory-method="inlineScript">
        <constructor-arg>
            <value>
              <![CDATA[
                       var System = Java.type('java.lang.System');
                       var Paths = Java.type('java.nio.file.Paths');

                       var idpHome = System.getProperty('idp.home');
                       var jvmNpmPath = Paths.get(idpHome, './scripts/polyfill/jvm-npm.js').toAbsolutePath().toString();
                       var nodePath = Paths.get(idpHome, './scripts').toAbsolutePath().toString()

                       load(jvmNpmPath);
                       require.NODE_PATH = nodePath;

                       var utils = require('./policy/utils.js');
                       var P = require('./policy/policies.js');
                       utils.assertPolicy(P.consentPolicy, profileContext);
              ]]>
            </value>
        </constructor-arg>
    </bean>

</beans>
